Какие состояния могут иметь файлы находящиеся под контролем git? В каких областях (working tree/staged area/git repository) 
при этом они находятся?
Ответ:
1.
Отслеживаемые файлы: файлы, которые Git отслеживает. Они могут быть:
    Измененные: файлы, в которых были внесены изменения с момента последнего коммита
    Подготовленные (Staged): изменения, которые были добавлены в индекс с помощью git add
Неотслеживаемые файлы: файлы, которые Git не отслеживает. Это новые файлы, которые еще не были добавлены в репозиторий
2. Индекс (Staged Area)
Это область, где находятся изменения, готовые к коммиту. Файлы в этой области будут включены в следующий коммит
3. Репозиторий (Git Repository)
Здесь хранятся все коммиты и история изменений. Каждый коммит представляет собой снимок состояния проекта на момент фиксации
    
Какой командой можно отобразить состояние файлов в репозитории?
    Ответ:
    Команда git status позволяет увидеть текущее состояние файлов в рабочем дереве и индексе
    
Какими действиями (командами) можно изменять состояние файлов?
    Ответ:
    git add <file>: добавляет файл в индекс.
    git commit -m "сообщение": фиксирует изменения из индекса.
    git reset <file>: удаляет файл из индекса, возвращая его в состояние измененного.
    git checkout -- <file>: отменяет изменения в рабочем дереве для указанного файла.
    
Как посмотреть историю изменений в git?
    Ответ:
    git log
    
Есть ли возможность внести правки в последний commit? Если да, то как?
    Ответ:
    git commit --amend - открывается редактор для изменения коммита
    
Как отменить изменения определённого commit-а?
    Ответ:
    git revert <commit> - Это создаст новый коммит, который отменит изменения указанного коммита.
    
Как вернуть локальный репозиторий к состоянию, который был после заданного commit-а?
    Ответ:
    git checkout <commit> - создает "отделённую" ветку. 
    Чтобы вернуться к предыдущему состоянию на основной ветке, лучше использовать git reset или git revert.
    
Как работать с удалённым репозиторием (получить изменения/применить изменения/отправить изменения)?
    Ответ: 
    Для работы с удалённым репозиторием используйте следующие команды:
    Получение изменений: git pull origin <branch>
    Отправка изменений:  git push origin <branch>
    
Что такое ветка в git-е под капотом?
    Ответ:
    Ветки в Git представляют собой указатели на конкретные коммиты. 
    Каждая ветка хранит ссылку на последний коммит, что позволяет легко переключаться между разными линиями разработки.
    
Как и где хранятся конфигурации git? Какими командами командной строки их можно отобразить?
    Ответ: 
    Конфигурации Git хранятся в следующих местах:
    Локальные настройки: .git/config внутри вашего репозитория.
    Чтобы отобразить конфигурации, используйте команды:
    git config --list       # Отображает все настройки
    git config --global --list   # Отображает глобальные настройки
    
Как можно настроить git для игнорирования определённых типов файлов или каталогов?
    Ответ:
    Для игнорирования файлов необходим файл .gitignore в корне вашего репозитория и добавьте туда шаблоны для игнорируемых файлов. Например:
    text
    # Игнорировать все .log файлы
    *.log
    
    # Игнорировать каталог temp/
    temp/